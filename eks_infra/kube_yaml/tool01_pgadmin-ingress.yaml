---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pgadmin-ingress
  namespace: genai
  annotations:
    # alb.ingress.kubernetes.io/group.name: "mmh-sg-iha-alb" 
    alb.ingress.kubernetes.io/scheme: internet-facing
    # This defines the type of traffic the ALB will listen for
    alb.ingress.kubernetes.io/target-type: ip
    # Associates our AWS WAF WebACL with the Application Load Balancer.
    alb.ingress.kubernetes.io/wafv2-acl-arn: "arn:aws:wafv2:ap-southeast-1:806342426990:regional/webacl/eks-mmh-sg-web-acl/be062b91-ea1e-4fc0-91d0-1470464a3fcd"

    # cert-manager.io/cluster-issuer: letsencrypt-staging
    # cert-manager.io/cluster-issuer: aws-public-issuer
    alb.ingress.kubernetes.io/proxy-read-timeout: "3600"
    alb.ingress.kubernetes.io/proxy-send-timeout: "3600"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
spec:
  ingressClassName: alb
  # This section enables TLS on the ALB using the cert from cert-manager
  # tls:
    # - hosts:
    #     - pgadmin.api.mmh-global.com # A dummy hostname
    #   secretName: pgadmin-api-mmh-global-com-staging-tls # cert-manager will create this secret for us
  rules:
    - host: pgadmin.api.mmh-global.com # The hostname for the Ingress
      http:
        paths:
          - path: /
            pathType: Prefix # Use Prefix to match all paths starting with /pgadmin
            backend:
              service:
                name: pgadmin-svc
                port:
                  number: 80